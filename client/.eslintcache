[{"F:\\pcell-ifair-portal-original\\client\\src\\index.js":"1","F:\\pcell-ifair-portal-original\\client\\src\\utils\\StateProvider.js":"2","F:\\pcell-ifair-portal-original\\client\\src\\reportWebVitals.js":"3","F:\\pcell-ifair-portal-original\\client\\src\\utils\\reducer.js":"4","F:\\pcell-ifair-portal-original\\client\\src\\App.js":"5","F:\\pcell-ifair-portal-original\\client\\src\\utils\\setUser.js":"6","F:\\pcell-ifair-portal-original\\client\\src\\home\\Home.js":"7","F:\\pcell-ifair-portal-original\\client\\src\\register\\RegistrationForm.js":"8","F:\\pcell-ifair-portal-original\\client\\src\\Help\\Help.js":"9","F:\\pcell-ifair-portal-original\\client\\src\\profile\\profile.js":"10","F:\\pcell-ifair-portal-original\\client\\src\\login\\login.js":"11","F:\\pcell-ifair-portal-original\\client\\src\\components\\footer\\Footer.js":"12","F:\\pcell-ifair-portal-original\\client\\src\\utils\\firebase\\firebaseConfig.js":"13","F:\\pcell-ifair-portal-original\\client\\src\\other\\CoursesList.js":"14","F:\\pcell-ifair-portal-original\\client\\src\\admin\\AdminLogin.js":"15","F:\\pcell-ifair-portal-original\\client\\src\\components\\userProfile.js\\UserProfile.js":"16","F:\\pcell-ifair-portal-original\\client\\src\\admin\\Logistics.js":"17","F:\\pcell-ifair-portal-original\\client\\src\\downloadData\\downloadData.js":"18","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\Grid.js":"19","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\box.js":"20","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\Cartlist.js":"21","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\CompanyPage.js":"22"},{"size":701,"mtime":1611513037111,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1611513052383,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1585,"mtime":1613207097858,"results":"27","hashOfConfig":"24"},{"size":1661,"mtime":1613219170982,"results":"28","hashOfConfig":"24"},{"size":961,"mtime":1612529248072,"results":"29","hashOfConfig":"24"},{"size":2838,"mtime":1613148958152,"results":"30","hashOfConfig":"24"},{"size":18996,"mtime":1612767374971,"results":"31","hashOfConfig":"24"},{"size":2727,"mtime":1613149000868,"results":"32","hashOfConfig":"24"},{"size":16871,"mtime":1613208976089,"results":"33","hashOfConfig":"24"},{"size":4504,"mtime":1612863021303,"results":"34","hashOfConfig":"24"},{"size":614,"mtime":1612418811350,"results":"35","hashOfConfig":"24"},{"size":758,"mtime":1613152393722,"results":"36","hashOfConfig":"24"},{"size":671,"mtime":1612461848023,"results":"37","hashOfConfig":"24"},{"size":1623,"mtime":1612693263072,"results":"38","hashOfConfig":"24"},{"size":6836,"mtime":1613208593284,"results":"39","hashOfConfig":"24"},{"size":2291,"mtime":1613142412023,"results":"40","hashOfConfig":"24"},{"size":3692,"mtime":1612902279268,"results":"41","hashOfConfig":"24"},{"size":2793,"mtime":1613220159805,"results":"42","hashOfConfig":"24"},{"size":1864,"mtime":1613206504300,"results":"43","hashOfConfig":"24"},{"size":2835,"mtime":1613221341615,"results":"44","hashOfConfig":"24"},{"size":3417,"mtime":1613219346693,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"k1bro9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"F:\\pcell-ifair-portal-original\\client\\src\\index.js",[],["102","103"],"F:\\pcell-ifair-portal-original\\client\\src\\utils\\StateProvider.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\reportWebVitals.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\utils\\reducer.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\App.js",["104"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport RegistrationForm from \"./register/RegistrationForm\";\nimport \"./register/RegistrationForm.css\";\nimport Home from \"./home/Home\";\nimport Footer from \"./components/footer/Footer\";\nimport Profile from \"./profile/profile\";\nimport Login from \"./login/login\";\nimport Help from \"./Help/Help\";\nimport AdminLogin from \"./admin/AdminLogin\";\nimport Logistics from \"./admin/Logistics\";\nimport Download from \"./downloadData/downloadData\";\nimport Grid from \"./company-grid/Grid\";\nimport CompanyPage from \"./company-grid/CompanyPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          {/* <Route exact path=\"/ifair/register\">\n            <RegistrationForm />\n          </Route> */}\n          <Route exact path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/ifair/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/help\">\n            <Help />\n          </Route>\n          <Route exact path=\"/admin/login\">\n            <AdminLogin />\n          </Route>\n          <Route exact path=\"/company/select\">\n            <Grid />\n          </Route>\n          <Route exact path=\"/company/:id\" component={CompanyPage} />\n          <Route exact path=\"/admin/logistics\">\n            <Logistics />\n          </Route>\n          <Route exact path=\"/downloadData\">\n            <Download />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\pcell-ifair-portal-original\\client\\src\\utils\\setUser.js",["105","106","107"],"import { auth, storage, firestore } from \"../utils/firebase/firebaseConfig\";\r\n\r\nconst setUser = async (id) => {\r\n  if (!id) {\r\n    return null;\r\n  }\r\n\r\n  let thisUser = {};\r\n\r\n  await firestore\r\n    .collection(\"users\")\r\n    .doc(`${id}`)\r\n    .get()\r\n    .then(async (doc) => {\r\n      thisUser = { ...thisUser, ...doc.data() };\r\n\r\n      let properties = {\r\n        admission: null,\r\n        resume: null,\r\n        proofOfResume: null,\r\n      };\r\n\r\n      for (const property in properties) {\r\n        await storage\r\n          .ref()\r\n          .child(\"users\")\r\n          .child(`${id}`)\r\n          .child(property.toString())\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            thisUser = { ...thisUser, [property]: url };\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            thisUser = { ...thisUser, [property]: null };\r\n          });\r\n      }\r\n    });\r\n\r\n  return thisUser;\r\n};\r\n\r\nexport default setUser;\r\n","F:\\pcell-ifair-portal-original\\client\\src\\home\\Home.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\register\\RegistrationForm.js",["108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\n\r\nimport {\r\n  storage,\r\n  firestore as db,\r\n  auth,\r\n  functions,\r\n} from \"../utils/firebase/firebaseConfig\";\r\n\r\nimport password from \"generate-password\";\r\nimport coursesList from \"../other/CoursesList\";\r\n\r\nimport \"./RegistrationForm.css\";\r\n\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\n\r\nimport setUser from \"../utils/setUser\";\r\n\r\nconst passwordOptions = {\r\n  length: 10,\r\n  numbers: true,\r\n  excludeSimilarCharacters: true,\r\n  strict: true,\r\n};\r\n\r\nconst sendMail = functions.httpsCallable(\"app\");\r\n\r\nfunction RegistrationForm() {\r\n  const History = useHistory();\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const [buttonText, setButtonText] = useState(\"Continue\");\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    fullName: null,\r\n    collegeRollNo: null,\r\n    year: \"1\",\r\n    course: null,\r\n    emailAddress: null,\r\n    contactNumber: null,\r\n    guardianName: null,\r\n    guardianNumber: null,\r\n    college: \"Sri Venkateswara College\",\r\n    approved: false,\r\n    remarks: \"\",\r\n    level: 1,\r\n    sno: \"0\",\r\n  });\r\n\r\n  const [formError, setFormError] = useState({\r\n    fieldMessage: false,\r\n    admission: false,\r\n    resume: false,\r\n    proofOfResume: false,\r\n  });\r\n\r\n  const [filename, setFilename] = useState({\r\n    resume: \"Choose file\",\r\n    admission: \"Choose file\",\r\n    proofOfResume: \"Choose file\",\r\n  });\r\n\r\n  const [uploadFiles, setFiles] = useState({\r\n    admission: null,\r\n    resume: null,\r\n    proofOfResume: null,\r\n  });\r\n\r\n  const [filecheck, setFilecheck] = useState({\r\n    resume: -1,\r\n    proofOfResume: -1,\r\n    admission: -1,\r\n  });\r\n\r\n  const handleFormChange = ({ target: { value, name } }) => {\r\n    setFormValues({ ...formValues, [name]: value });\r\n\r\n    // if (value.length < 1) {\r\n    //   setFormError({\r\n    //     ...formError,\r\n    //     fieldMessage: \"No text field can contain less than 1 characters.\",\r\n    //   });\r\n    // } else {\r\n    //   setFormError({\r\n    //     ...formError,\r\n    //     fieldMessage: 1,\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = { valid: false, list: [] };\r\n\r\n    for (const property in formValues) {\r\n      if (formValues[property] === null) {\r\n        errors.list.push(`${property} cannot be empty.`);\r\n      }\r\n\r\n      if (\r\n        property.toString() === \"contactNumber\" ||\r\n        property.toString() === \"guardianNumber\" ||\r\n        property.toString() === \"collegeRollNo\"\r\n      ) {\r\n        if (formValues[property]?.match(\"^[a-zA-Z]*$\")) {\r\n          errors.list.push(`${property} cannot contain alphabets.`);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const property in uploadFiles) {\r\n      if (uploadFiles[property] === null) {\r\n        errors.list.push(`${property} cannot be empty.`);\r\n      }\r\n\r\n      if (filecheck[property] === -1) {\r\n        errors.list.push(`${property} is greater than recommended size.`);\r\n      }\r\n    }\r\n\r\n    if (errors.list.length === 0) {\r\n      errors.valid = true;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmission = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setButtonText(\"Processing\");\r\n\r\n    const result = validateForm();\r\n\r\n    if (result.valid) {\r\n      setButtonText(\"Registering Account\");\r\n\r\n      const newPassword = password.generate(passwordOptions);\r\n\r\n      const storageRef = storage.ref().child(\"users\");\r\n\r\n      await auth\r\n        .createUserWithEmailAndPassword(formValues.emailAddress, newPassword)\r\n        .then(async (userCredential) => {\r\n          await userCredential.user.updateProfile({\r\n            displayName: formValues.collegeRollNo,\r\n          });\r\n\r\n          sendMail({\r\n            to: formValues.emailAddress,\r\n            password: newPassword,\r\n            fullName: formValues.fullName,\r\n          })\r\n            .then(async () => {\r\n              setButtonText(\"Uploading Details\");\r\n\r\n              await db\r\n                .collection(\"users\")\r\n                .doc(`${formValues.collegeRollNo}`)\r\n                .set(formValues)\r\n                // .then(() => {\r\n                //   dispatch({\r\n                //     type: \"SET_USER\",\r\n                //     user: userCredential.user.displayName,\r\n                //   });\r\n                //   History.push(\"/profile\");\r\n                // });\r\n                .then(async () => {\r\n                  setButtonText(\"Uploading Files\");\r\n\r\n                  for (const property in uploadFiles) {\r\n                    const file = uploadFiles[property];\r\n\r\n                    await storageRef\r\n                      .child(`${formValues.collegeRollNo}`)\r\n                      .child(property.toString())\r\n                      .put(file)\r\n                      .then(async (snapshot) => {})\r\n                      .catch((err) => {\r\n                        window.alert(\r\n                          `There was an error in uploading your files.\\nRecommended Browser is Google Chrome. Try again in some time if the error persists.\\nError Message: ${err}`\r\n                        );\r\n\r\n                        History.push(\"/\");\r\n                      });\r\n                  }\r\n                })\r\n                .then(() => {\r\n                  dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: userCredential.user.displayName,\r\n                  });\r\n\r\n                  setUser(userCredential.user.displayName)\r\n                    .then((thisUser) => {\r\n                      dispatch({ type: \"ADD_INFO\", info: thisUser });\r\n                    })\r\n                    .then(() => {\r\n                      History.push(\"/profile\");\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n\r\n                  window.alert(\r\n                    `There was an error in storing your details to the database.\\nRecommended Browser is Google Chrome. Try again in some time if the error persists.\\nError Message: ${err}`\r\n                  );\r\n\r\n                  History.push(\"/\");\r\n                });\r\n            })\r\n            .catch((err) => {\r\n              window.alert(\r\n                `There was an error sending credentials mail. Use Google Chrome or Contact the Technical Team.\\nError Message: ${err}`\r\n              );\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          window.alert(\r\n            `There was an error registering your account. Check Inbox to see if you have received a credentials mail or Use Google Chrome or Contact the Technical Team.\\nError Message: ${err}`\r\n          );\r\n\r\n          History.push(\"/\");\r\n        });\r\n    } else {\r\n      var errors = result.list.join(\"\\n\");\r\n      window.alert(`There is an error with your form. Errors: ${errors}`);\r\n      setButtonText(\"Continue\");\r\n    }\r\n  };\r\n\r\n  const onFileUpload = async ({ target: { files, name } }) => {\r\n    const thisFile = files[0];\r\n\r\n    if (name.toString() === \"resume\" && thisFile.size / 1024 > 10 * 1024) {\r\n      setFormError({\r\n        ...formError,\r\n        resume: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 10 MB.\");\r\n      setFilecheck({ ...filecheck, resume: -1 });\r\n    } else if (name.toString() === \"admission\" && thisFile.size / 1024 > 1024) {\r\n      setFormError({\r\n        ...formError,\r\n        admission: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 1 MB.\");\r\n      setFilecheck({ ...filecheck, admission: -1 });\r\n    } else if (\r\n      name.toString() === \"proofOfResume\" &&\r\n      thisFile.size / 1024 > 25 * 1024\r\n    ) {\r\n      setFormError({\r\n        ...formError,\r\n        proofOfResume: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 25 MB.\");\r\n      setFilecheck({ ...filecheck, proofOfResume: -1 });\r\n    } else {\r\n      setFormError({ ...formError, [name]: 1 });\r\n      await setFiles({\r\n        ...uploadFiles,\r\n        [name]: thisFile,\r\n      });\r\n      setFilecheck({ ...filecheck, [name]: 0 });\r\n      setFilename({ ...filename, [name]: thisFile.name });\r\n      setButtonText(\"Continue\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register_Page\">\r\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://bit.do/fNfw4\">\r\n        <div className=\"help_button\">\r\n          <HelpIcon />\r\n          <p>View Guidelines</p>\r\n        </div>\r\n      </a>\r\n      <div className=\"container\">\r\n        <div className=\"title_box\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/ifair-portal.appspot.com/o/assets%2Fpcell_logo.png?alt=media&token=0fab47f3-c265-4b11-a5a5-162437e594c2\"\r\n              alt=\"The Placement Cell, Sri Venkateswara College { Logo }\"\r\n            />\r\n          </Link>\r\n          <h2>Internship Fair 2021</h2>\r\n          <small>\r\n            The Placement Cell, Sri Venkateswara College, Delhi University\r\n          </small>\r\n          <h3>Registration Form</h3>\r\n        </div>\r\n\r\n        <div className=\"form_box\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col_5\">\r\n                <img\r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/ifair-portal.appspot.com/o/assets%2FBusiness%20deal-cuate.png?alt=media&token=8ce437d0-5bef-4b5a-b04b-191ace6d03ea\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col_7\">\r\n                <div className=\"row\">\r\n                  <div className=\"col_6\">\r\n                    <div className=\"input_group\">\r\n                      <label>Full Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        value={formValues.fullName}\r\n                        onChange={handleFormChange}\r\n                        id=\"fullName\"\r\n                        maxLength=\"25\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"input_group\">\r\n                      <label>College Roll Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"collegeRollNo\"\r\n                        value={formValues.collegeRollNo}\r\n                        onChange={handleFormChange}\r\n                        id=\"collegeRollNo\"\r\n                        maxLength=\"9\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        pattern=\"[0-9]{5,9}\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"select_group\">\r\n                      <label>College</label>\r\n                      <select\r\n                        name=\"college\"\r\n                        id=\"college\"\r\n                        onChange={handleFormChange}\r\n                        required\r\n                        disabled\r\n                      >\r\n                        <option default value=\"venky\">\r\n                          Sri Venkateswara College\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"select_group\">\r\n                      <label>Year of study</label>\r\n                      <select\r\n                        name=\"year\"\r\n                        id=\"year\"\r\n                        onChange={handleFormChange}\r\n                        required\r\n                      >\r\n                        <option default value=\"1\">\r\n                          I Year\r\n                        </option>\r\n                        <option value=\"2\">II Year</option>\r\n                        <option value=\"3\">III Year</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"select_group\">\r\n                      <label htmlFor=\"\">Course</label>\r\n                      <select\r\n                        name=\"course\"\r\n                        onChange={handleFormChange}\r\n                        id=\"course\"\r\n                        required\r\n                      >\r\n                        {coursesList.map((course) => (\r\n                          <option value={course}>{course}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"input_group\">\r\n                      <label htmlFor=\"\">Email Address</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"emailAddress\"\r\n                        id=\"emailAddress\"\r\n                        value={formValues.emailAddress}\r\n                        onChange={handleFormChange}\r\n                        required\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"input_group\">\r\n                      <label htmlFor=\"\">Contact Number (WhatsApp)</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"contactNumber\"\r\n                        id=\"contactNumber\"\r\n                        value={formValues.contactNumber}\r\n                        onChange={handleFormChange}\r\n                        minLength=\"10\"\r\n                        maxLength=\"10\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        pattern=\"[0-9]{10}\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"input_group\">\r\n                      <label htmlFor=\"\">Guardian's Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"guardianName\"\r\n                        id=\"guardianName\"\r\n                        value={formValues.guardianName}\r\n                        onChange={handleFormChange}\r\n                        maxLength=\"25\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col_6\">\r\n                    <div className=\"input_group\">\r\n                      <label htmlFor=\"\">Guardian's Contact Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formValues.guardianNumber}\r\n                        name=\"guardianNumber\"\r\n                        id=\"guardianNumber\"\r\n                        onChange={handleFormChange}\r\n                        minLength=\"10\"\r\n                        maxLength=\"10\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        pattern=\"[0-9]{10}\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"file_group\">\r\n                      <label htmlFor=\"\">Proof of Admission</label>\r\n                      <small>\r\n                        Upload scanned copy of your ID card or Admission Sheet\r\n                        in JPG format. <br />\r\n                        (Maximum file size limit: 1 MB)\r\n                      </small>\r\n                      <label htmlFor=\"admission\" className=\"upload_btn\">\r\n                        {filename.admission.length > 30\r\n                          ? filename.admission.slice(0, 29) + \"...\"\r\n                          : filename.admission}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"admission\"\r\n                        id=\"admission\"\r\n                        onChange={onFileUpload}\r\n                        accept=\".jpg, .jpeg\"\r\n                        required\r\n                      />\r\n                      <p className=\"error_message\">\r\n                        {formError.admission === 1 ? null : formError.admission}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"file_group\">\r\n                      <label htmlFor=\"\">Resume</label>\r\n                      <small>\r\n                        Upload a copy of your Resume in PDF format. <br />\r\n                        (Maximum file size limit: 10 MB)\r\n                      </small>\r\n                      <label htmlFor=\"resume\" className=\"upload_btn\">\r\n                        {filename.resume.length > 30\r\n                          ? filename.resume.slice(0, 29) + \"...\"\r\n                          : filename.resume}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"resume\"\r\n                        id=\"resume\"\r\n                        onChange={onFileUpload}\r\n                        accept=\".pdf\"\r\n                        required\r\n                      />\r\n                      <p className=\"error_message\">\r\n                        {formError.resume === 1 ? null : formError.resume}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"file_group\">\r\n                      <label htmlFor=\"\">Proof of Resume</label>\r\n\r\n                      <small>\r\n                        Upload an aggregated PDF of all certificates listed in\r\n                        your resume in PDF format.\r\n                        <br /> (Maximum file size limit: 25 MB)\r\n                      </small>\r\n\r\n                      <label htmlFor=\"proofOfResume\" className=\"upload_btn\">\r\n                        {filename.proofOfResume.length > 30\r\n                          ? filename.proofOfResume.slice(0, 29) + \"...\"\r\n                          : filename.proofOfResume}\r\n                      </label>\r\n\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"proofOfResume\"\r\n                        id=\"proofOfResume\"\r\n                        required\r\n                        onChange={onFileUpload}\r\n                        accept=\".pdf\"\r\n                      />\r\n\r\n                      <p className=\"error_message\">\r\n                        {formError.proofOfResume === 1\r\n                          ? null\r\n                          : formError.proofOfResume}\r\n                      </p>\r\n                    </div>\r\n\r\n                    {/* {formError.fieldMessage && (\r\n                      <p className=\"error_message\">\r\n                        {formError.fieldMessage === 1\r\n                          ? null\r\n                          : formError.fieldMessage}\r\n                      </p>\r\n                    )} */}\r\n\r\n                    <button className=\"submitButton\" onClick={handleSubmission}>\r\n                      {buttonText}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","F:\\pcell-ifair-portal-original\\client\\src\\Help\\Help.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\profile\\profile.js",["110","111","112","113"],"import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport {\r\n  storage,\r\n  firestore as db,\r\n  auth,\r\n} from \"../utils/firebase/firebaseConfig\";\r\n\r\nfunction Profile() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [thisUser, setThisUser] = useState({\r\n    fullName: null,\r\n    collegeRollNo: null,\r\n    year: null,\r\n    course: null,\r\n    emailAddress: null,\r\n    contactNumber: null,\r\n    guardianName: null,\r\n    guardianNumber: null,\r\n    college: \"Sri Venkateswara College\",\r\n    approved: false,\r\n    remarks: null,\r\n    level: null,\r\n    sno: null,\r\n    resume: null,\r\n    proofOfResume: null,\r\n    admission: null,\r\n    companyLimit: 0,\r\n    companiesSelected: false,\r\n  });\r\n\r\n  useEffect(async () => {\r\n    if (user) {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(user)\r\n        .get()\r\n        .then(async (doc) => {\r\n          const thisRef = storage.ref().child(\"users\").child(user);\r\n          let properties = {\r\n            admission: null,\r\n            resume: null,\r\n            proofOfResume: null,\r\n          };\r\n\r\n          for (const property in properties) {\r\n            await thisRef\r\n              .child(property.toString())\r\n              .getDownloadURL()\r\n              .then((url) => {\r\n                properties = { ...properties, [property]: url };\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                properties = { ...properties, [property]: null };\r\n              });\r\n          }\r\n          setThisUser({ ...thisUser, ...doc.data(), ...properties });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const [buttonText, setButtonText] = useState({\r\n    admission: \"Upload File\",\r\n    proofOfResume: \"Upload File\",\r\n    resume: \"Upload File\",\r\n  });\r\n  const [filename, setfileName] = useState({\r\n    admission: \"Choose File\",\r\n    proofOfResume: \"Choose File\",\r\n    resume: \"Choose File\",\r\n  });\r\n  const [uploadFiles, setFiles] = useState({\r\n    admission: null,\r\n    resume: null,\r\n    proofOfResume: null,\r\n  });\r\n  const [filecheck, setFilecheck] = useState({\r\n    resume: -1,\r\n    proofOfResume: -1,\r\n    admission: -1,\r\n  });\r\n\r\n  document.title = `${thisUser?.fullName} | Internship Fair 2021`;\r\n\r\n  const History = useHistory();\r\n\r\n  const logOut = async () => {\r\n    await auth.signOut().then(() => {\r\n      dispatch({\r\n        action: \"REMOVE_USER\",\r\n      });\r\n      History.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const onFileUpload = async ({ target: { files, name } }) => {\r\n    const thisFile = files[0];\r\n\r\n    if (name.toString() === \"resume\" && thisFile.size / 1024 > 10 * 1024) {\r\n      setButtonText({\r\n        ...buttonText,\r\n        resume: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 10 MB.\");\r\n      setFilecheck({ ...filecheck, resume: -1 });\r\n    } else if (name.toString() === \"admission\" && thisFile.size / 1024 > 1024) {\r\n      setButtonText({\r\n        ...buttonText,\r\n        admission: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 1 MB.\");\r\n      setFilecheck({ ...filecheck, admission: -1 });\r\n    } else if (\r\n      name.toString() === \"proofOfResume\" &&\r\n      thisFile.size / 1024 > 25 * 1024\r\n    ) {\r\n      setButtonText({\r\n        ...buttonText,\r\n        proofOfResume: \"File size limit exceeded.\",\r\n      });\r\n      alert(\"Please upload a file less than 25 MB.\");\r\n      setFilecheck({ ...filecheck, proofOfResume: -1 });\r\n    } else {\r\n      await setFiles({\r\n        ...uploadFiles,\r\n        [name]: thisFile,\r\n      });\r\n      setFilecheck({ ...filecheck, [name]: 0 });\r\n      setfileName({ ...filename, [name]: thisFile.name });\r\n      setButtonText({ ...buttonText, [name]: \"Upload File\" });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (property) => {\r\n    if (filecheck[property] === -1) {\r\n      alert(\"Upload a file within the size constraints.\");\r\n    } else {\r\n      setButtonText({ ...buttonText, [property]: \"Processing\" });\r\n      storage\r\n        .ref()\r\n        .child(\"users\")\r\n        .child(`${thisUser?.collegeRollNo}`)\r\n        .child(property)\r\n        .put(uploadFiles[property])\r\n        .then(() => {\r\n          setButtonText({ ...buttonText, [property]: \"Uploaded.\" });\r\n        })\r\n        .catch((err) => {\r\n          setButtonText({ ...buttonText, [property]: \"There was an error.\" });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteAccount = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = auth.currentUser;\r\n\r\n    db.collection(\"users\")\r\n      .doc(user.displayName)\r\n      .delete()\r\n      .then(() => {\r\n        const storageRef = storage.ref();\r\n\r\n        storageRef\r\n          .child(\"users\")\r\n          .child(user.displayName)\r\n          .child(\"resume\")\r\n          .delete()\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        storageRef\r\n          .child(\"users\")\r\n          .child(user.displayName)\r\n          .child(\"proofOfResume\")\r\n          .delete()\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        storageRef\r\n          .child(\"users\")\r\n          .child(user.displayName)\r\n          .child(\"admission\")\r\n          .delete()\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        user.delete().then(() => {\r\n          History.push(\"/\");\r\n        });\r\n      });\r\n  };\r\n\r\n  const selectCompanies = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({\r\n      type: \"SET_APPROVAL\",\r\n      approved: thisUser.approved,\r\n      companyLimit: thisUser.companyLimit,\r\n    });\r\n\r\n    History.push(\"/company/select\");\r\n  };\r\n\r\n  return user ? (\r\n    <div className=\"profile_page\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar\">\r\n          <Link to=\"/\">\r\n            <div className=\"logo_box\">\r\n              <img src=\"./pcell_logo.png\" alt=\"\" />\r\n\r\n              <p>\r\n                The Placement Cell <br />\r\n                <span>Sri Venkateswara College</span>\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"button_box\">\r\n            <button className=\"logout_button\" onClick={logOut}>\r\n              Log out\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"profile_info\">\r\n          {thisUser.resume &&\r\n          thisUser.proofOfResume &&\r\n          thisUser.admission ? null : (\r\n            <div className=\"flash warning\">\r\n              <p>You have not uploaded</p>{\" \"}\r\n              {thisUser.resume ? null : <li>Resume</li>}\r\n              {thisUser.proofOfResume ? null : <li>Proof of Resume</li>}\r\n              {thisUser.admission ? null : <li>Proof of Admission</li>}\r\n              <br />\r\n              <p>\r\n                Please upload these files in order to participate in the\r\n                Internship Fair, 2021. <br />\r\n                Scroll down on this page to upload the files. ↓\r\n              </p>\r\n            </div>\r\n          )}\r\n          <h1>Hello, {thisUser?.fullName}</h1>\r\n          <h4>My profile</h4>\r\n          <hr />\r\n          <h3 className=\"stage_indicator\">\r\n            You're at stage {`${thisUser?.level}`}\r\n          </h3>\r\n          <hr />\r\n          <h4>Files Approved: {thisUser?.approved ? \"Yes\" : \"No\"}</h4>\r\n          <p className=\"files_remarks\">\r\n            <strong>Remarks</strong>:{\" \"}\r\n            {thisUser?.remarks === \"\"\r\n              ? \"Yet to be reviewed.\"\r\n              : thisUser?.remarks}\r\n            {thisUser.approved && !thisUser.companiesSelected ? (\r\n              <div className=\"company_selection\">\r\n                <button onClick={selectCompanies}>\r\n                  Go on to select companies ➞\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </p>\r\n\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col_3\">\r\n              <div className=\"user_info\">\r\n                <strong>College Roll No: </strong>\r\n                <p>{thisUser?.collegeRollNo}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>College: </strong>\r\n                <p>{thisUser?.college}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>Course: </strong>\r\n                <p>{thisUser?.course}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col_3\">\r\n              <div className=\"user_info\">\r\n                <strong>Email Address: </strong>\r\n                <p>{thisUser?.emailAddress}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>Year of Study: </strong>\r\n                <p>{thisUser?.year}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>Contact Number: </strong>\r\n                <p>{thisUser?.contactNumber}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col_3\">\r\n              <div className=\"user_info\">\r\n                <strong>Guardian's Name: </strong>\r\n                <p>{`${thisUser?.guardianName}`}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>Guardian's Contact Number: </strong>\r\n                <p>{`${thisUser?.guardianNumber}`}</p>\r\n              </div>\r\n              <div className=\"user_info\">\r\n                <strong>COMPANIES SELECTED: </strong>\r\n                <p>{thisUser?.companiesSelected ? \"YES\" : \"NO\"}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col_3\">\r\n              <div className=\"user_file\">\r\n                <strong>Admission Proof: </strong>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={thisUser?.admission}>\r\n                  {thisUser?.admission === null\r\n                    ? \"Not Uploaded\"\r\n                    : \"View your file here\"}\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col_3\">\r\n              <div className=\"user_file\">\r\n                <strong>Resume: </strong>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={thisUser?.resume}>\r\n                  {thisUser?.resume === null\r\n                    ? \"Not Uploaded\"\r\n                    : \"View your file here\"}\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col_3\">\r\n              <div className=\"user_file\">\r\n                <strong>Proof of Resume: </strong>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  href={thisUser?.proofOfResume}\r\n                >\r\n                  {thisUser?.proofOfResume === null\r\n                    ? \"Not Uploaded\"\r\n                    : \"View your file here\"}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"delete_box\">\r\n            <p>\r\n              Accidentally entered wrong information such as your email address,\r\n              or details? You can delete your account and register again.{\" \"}\r\n            </p>\r\n            <button\r\n              className=\"submitButton deleteProfile\"\r\n              onClick={deleteAccount}\r\n            >\r\n              Delete my Account\r\n            </button>\r\n          </div>\r\n          {thisUser.approved ? null : (\r\n            <div className=\"reupload\">\r\n              <h3>File Upload</h3>\r\n              <p>\r\n                Upload your files here. After they've been uploaded\r\n                successfully, our team will verify them to make sure they meet\r\n                our mandated guidelines. <br />\r\n                <br />\r\n                Once successfully verified, the <strong>\r\n                  Files Approved\r\n                </strong>{\" \"}\r\n                field above will reflect the same and you'll be able to\r\n                participate in the Internship Fair.\r\n                <br />\r\n                <br />\r\n                In case they do not meet our guidelines, you can check the\r\n                suggested changes in the <strong>Remarks</strong> field and\r\n                after making those changes, you can reupload your files.\r\n                <br />\r\n                <br />\r\n                In case you uploaded the wrong files, or your files weren't\r\n                successfully uploaded whilst registering your account, you can\r\n                reupload them here.{\" \"}\r\n              </p>\r\n              <form>\r\n                <div className=\"row\">\r\n                  <div className=\"col_3\">\r\n                    <h4>Admission Proof</h4>\r\n                    <div className=\"file_group\">\r\n                      <small>\r\n                        Upload scanned copy of your ID card or Admission Sheet\r\n                        in JPG format. <br />\r\n                        (Maximum file size limit: 1 MB)\r\n                      </small>\r\n                      <label htmlFor=\"admission\" className=\"upload_btn\">\r\n                        {filename.admission.length > 30\r\n                          ? filename.admission.slice(0, 29) + \"...\"\r\n                          : filename.admission}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"admission\"\r\n                        id=\"admission\"\r\n                        onChange={onFileUpload}\r\n                        accept=\".jpg, .jpeg\"\r\n                        required\r\n                      />\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleUpload(\"admission\");\r\n                        }}\r\n                      >\r\n                        {buttonText.admission}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col_3\">\r\n                    <h4>Resume</h4>\r\n                    <div className=\"file_group\">\r\n                      <small>\r\n                        Upload a copy of your Resume in PDF format. <br />\r\n                        <br />\r\n                        (Maximum file size limit: 10 MB)\r\n                      </small>\r\n                      <label htmlFor=\"resume\" className=\"upload_btn\">\r\n                        {filename.resume.length > 30\r\n                          ? filename.resume.slice(0, 29) + \"...\"\r\n                          : filename.resume}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"resume\"\r\n                        id=\"resume\"\r\n                        onChange={onFileUpload}\r\n                        accept=\".pdf\"\r\n                        required\r\n                      />\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleUpload(\"resume\");\r\n                        }}\r\n                      >\r\n                        {buttonText.resume}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col_3\">\r\n                    <h4>Proof of Resume</h4>\r\n                    <div className=\"file_group\">\r\n                      <small>\r\n                        Upload an aggregated PDF of all certificates listed in\r\n                        your resume in PDF format.\r\n                        <br /> (Maximum file size limit: 25 MB)\r\n                      </small>\r\n                      <label htmlFor=\"proofOfResume\" className=\"upload_btn\">\r\n                        {filename.proofOfResume.length > 30\r\n                          ? filename.proofOfResume.slice(0, 29) + \"...\"\r\n                          : filename.proofOfResume}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"proofOfResume\"\r\n                        id=\"proofOfResume\"\r\n                        onChange={onFileUpload}\r\n                        accept=\".pdf\"\r\n                        required\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          handleUpload(\"proofOfResume\");\r\n                        }}\r\n                      >\r\n                        {buttonText.proofOfResume}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","F:\\pcell-ifair-portal-original\\client\\src\\login\\login.js",["114"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\n\r\nimport { auth } from \"../utils/firebase/firebaseConfig\";\r\n\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\nfunction Login() {\r\n  const History = useHistory();\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    email: null,\r\n    password: null,\r\n  });\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n\r\n  const [buttonText, setButtonText] = useState(\"Log In\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setButtonText(\"Processing\");\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(formValues.email, formValues.password)\r\n      .then((userCredential) => {\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: userCredential.user.displayName,\r\n        });\r\n\r\n        History.push(\"/profile\");\r\n      })\r\n      .catch((error) => {\r\n        setButtonText(\"There was an error.\");\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleVisibility = (e) => {\r\n    if (passwordVisibility === \"password\") {\r\n      setPasswordVisibility(\"text\");\r\n    } else {\r\n      setPasswordVisibility(\"password\");\r\n    }\r\n  };\r\n\r\n  const resetPassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValues.email === null) {\r\n      alert(\"Enter your email address first.\");\r\n    } else {\r\n      auth\r\n        .sendPasswordResetEmail(formValues.email)\r\n        .then(() => {\r\n          alert(\"Email Sent.\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"There was an error.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"container\">\r\n        <div className=\"title_box\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/ifair-portal.appspot.com/o/assets%2Fpcell_logo.png?alt=media&token=0fab47f3-c265-4b11-a5a5-162437e594c2\"\r\n              alt=\"The Placement Cell, Sri Venkateswara College { Logo }\"\r\n            />\r\n          </Link>\r\n          <h2>Internship Fair 2021</h2>\r\n          <small>\r\n            The Placement Cell, Sri Venkateswara College, Delhi University\r\n          </small>\r\n          <h3>Log In</h3>\r\n        </div>\r\n        <div className=\"form_box\">\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col_6\">\r\n                <img\r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/ifair-portal.appspot.com/o/assets%2F4334828.png?alt=media&token=2e4e062b-892b-4b51-b0e8-a562be08ff92\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col_6\">\r\n                <div className=\"input_group\">\r\n                  <label>Email Address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"\"\r\n                    minLength=\"1\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={formValues.email}\r\n                  />\r\n                </div>\r\n                <div className=\"input_group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type={passwordVisibility}\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"\"\r\n                    required\r\n                    minLength=\"1\"\r\n                    onChange={handleChange}\r\n                    value={formValues.password}\r\n                  />\r\n                  <button onClick={handleVisibility} type=\"button\">\r\n                    <VisibilityIcon />\r\n                  </button>\r\n                </div>\r\n                <button onClick={handleSubmit} className=\"submitButton\">\r\n                  {buttonText}\r\n                </button>\r\n                <button\r\n                  className=\"submitButton resetpassword\"\r\n                  onClick={resetPassword}\r\n                >\r\n                  Forgot password? Reset it here.\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","F:\\pcell-ifair-portal-original\\client\\src\\components\\footer\\Footer.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\utils\\firebase\\firebaseConfig.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\other\\CoursesList.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\admin\\AdminLogin.js",["115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../utils/firebase/firebaseConfig\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./adminlogin.css\";\r\n\r\nexport default function AdminLogin() {\r\n  const History = useHistory();\r\n  const [formValues, setFormValues] = useState({ email: null, password: null });\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(formValues.email, formValues.password)\r\n      .then((user) => {\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: user.user.displayName,\r\n        });\r\n      })\r\n      .then(() => {\r\n        History.push(\"/admin/logistics\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin_login\">\r\n      <div className=\"container\">\r\n        <h1>Admin Log in</h1>\r\n        <div className=\"admin_login_box\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={formValues.email}\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={formValues.password}\r\n            onChange={handleChange}\r\n          />\r\n          <button onClick={handleSubmit} type=\"submit\">\r\n            Log in\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","F:\\pcell-ifair-portal-original\\client\\src\\components\\userProfile.js\\UserProfile.js",["117","118","119","120","121","122","123","124","125"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  firestore as db,\r\n  storage,\r\n  functions,\r\n} from \"../../utils/firebase/firebaseConfig\";\r\nimport \"./userprofile.css\";\r\n\r\nconst sendRemarksMail = functions.httpsCallable(\"rejectionMail\");\r\nconst sendAcceptMail = functions.httpsCallable(\"acceptMail\");\r\n\r\nexport default function UserProfile({ rollno }) {\r\n  const [thisUser, setThisUser] = useState({\r\n    fullName: null,\r\n    collegeRollNo: rollno,\r\n    year: null,\r\n    course: null,\r\n    emailAddress: null,\r\n    contactNumber: null,\r\n    guardianName: null,\r\n    guardianNumber: null,\r\n    college: \"Sri Venkateswara College\",\r\n    approved: false,\r\n    remarks: null,\r\n    level: null,\r\n    sno: null,\r\n    resume: null,\r\n    proofOfResume: null,\r\n    admission: null,\r\n  });\r\n\r\n  const [thisRemarks, setRemarks] = useState(null);\r\n\r\n  const [status, setStatus] = useState({ bgcolor: null, text: \"\" });\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setRemarks(value);\r\n    console.log(thisRemarks);\r\n  };\r\n\r\n  const [buttonText, setButtonText] = useState({\r\n    accept: \"Accept\",\r\n    remarker: \"Send Remarks\",\r\n  });\r\n\r\n  useEffect(async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(rollno)\r\n      .get()\r\n      .then(async (doc) => {\r\n        const thisRef = storage.ref().child(\"users\").child(rollno);\r\n        let properties = {\r\n          admission: null,\r\n          resume: null,\r\n          proofOfResume: null,\r\n        };\r\n\r\n        for (const property in properties) {\r\n          await thisRef\r\n            .child(property.toString())\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              properties = { ...properties, [property]: url };\r\n            })\r\n            .catch((err) => {\r\n              properties = { ...properties, [property]: null };\r\n            });\r\n        }\r\n\r\n        if (!doc.data().companyLimit) {\r\n          await db.collection(\"users\").doc(doc.data().collegeRollNo).update({\r\n            companyLimit: 4,\r\n            companiesSelected: false,\r\n          });\r\n        }\r\n        if (!doc.data().companiesSelected) {\r\n          await db.collection(\"users\").doc(doc.data().collegeRollNo).update({\r\n            companiesSelected: false,\r\n          });\r\n        }\r\n\r\n        setThisUser({ ...thisUser, ...doc.data(), ...properties });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setStatus({\r\n      ...status,\r\n      bgcolor: thisUser.approved ? \"#16c79a\" : \"#ec4646\",\r\n      text: thisUser.fullName,\r\n    });\r\n  }, [thisUser]);\r\n\r\n  useEffect(async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(rollno)\r\n      .get()\r\n      .then(async (doc) => {\r\n        const thisRef = storage.ref().child(\"users\").child(rollno);\r\n        let properties = {\r\n          admission: null,\r\n          resume: null,\r\n          proofOfResume: null,\r\n        };\r\n\r\n        for (const property in properties) {\r\n          await thisRef\r\n            .child(property.toString())\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              properties = { ...properties, [property]: url };\r\n            })\r\n            .catch((err) => {\r\n              properties = { ...properties, [property]: null };\r\n            });\r\n        }\r\n        setThisUser({ ...thisUser, ...doc.data(), ...properties });\r\n      });\r\n  }, [buttonText]);\r\n\r\n  const handleAccept = async (e) => {\r\n    e.preventDefault();\r\n    await db.collection(\"users\").doc(thisUser.collegeRollNo).update({\r\n      remarks: \"Accepted!\",\r\n      level: 2,\r\n      approved: true,\r\n    });\r\n    sendAcceptMail({\r\n      to: thisUser.emailAddress,\r\n      fullName: thisUser.fullName,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setButtonText({ ...buttonText, accept: \"Accepted and Mail Sent!\" });\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  const handleRemarks = async (e) => {\r\n    e.preventDefault();\r\n    await db.collection(\"users\").doc(thisUser.collegeRollNo).update({\r\n      remarks: thisRemarks,\r\n      approved: false,\r\n      level: 1,\r\n    });\r\n    console.log(thisUser.emailAddress);\r\n    sendRemarksMail({\r\n      to: thisUser.emailAddress,\r\n      fullName: thisUser.fullName,\r\n      remarks: thisRemarks,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setButtonText({\r\n          ...buttonText,\r\n          remarker: \"Remarks Added and Mail Sent!\",\r\n        });\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <div\r\n        className=\"status\"\r\n        style={{\r\n          backgroundColor: status.bgcolor,\r\n        }}\r\n      >\r\n        {thisUser.fullName}\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <strong>Roll No:</strong> {thisUser.collegeRollNo}\r\n        </li>\r\n        <li>\r\n          <strong>Course: </strong>\r\n          {thisUser.course}\r\n        </li>\r\n        <li>\r\n          <strong>Year:</strong> {thisUser.year}\r\n        </li>\r\n        <li>\r\n          <strong>Email Address:</strong> {thisUser.emailAddress}\r\n        </li>\r\n        <li>\r\n          <strong>Contact Number:</strong> {thisUser.contactNumber}\r\n        </li>\r\n        <li>\r\n          <strong>Guardian's Name:</strong> {thisUser.guardianName}\r\n        </li>\r\n        <li>\r\n          <strong>Guardian's Number: </strong>\r\n          {thisUser.guardianNumber}\r\n        </li>\r\n        <hr />\r\n        <li>\r\n          <strong> Resume:</strong>{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={thisUser.resume ? thisUser.resume : null}\r\n          >\r\n            {thisUser.resume ? \"View Here\" : \"Not Uploaded\"}\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <strong>Admission Proof:</strong>{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={thisUser.admission ? thisUser.admission : null}\r\n          >\r\n            {thisUser.admission ? \"View Here\" : \"Not Uploaded\"}\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <strong>Proof of Resume:</strong>{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={thisUser.proofOfResume ? thisUser.proofOfResume : null}\r\n          >\r\n            {thisUser.proofOfResume ? \"View Here\" : \"Not Uploaded\"}\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <strong>Current Remarks:</strong> {thisUser.remarks}\r\n        </li>\r\n      </ul>\r\n      <textarea\r\n        name=\"remarks\"\r\n        className=\"remarks\"\r\n        placeholder=\"Enter Remarks here\"\r\n        onChange={handleChange}\r\n        value={thisRemarks}\r\n      ></textarea>\r\n      <button className=\"send_remarks\" onClick={handleRemarks}>\r\n        {buttonText.remarker}\r\n      </button>\r\n      <button className=\"accept\" onClick={handleAccept}>\r\n        {buttonText.accept}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","F:\\pcell-ifair-portal-original\\client\\src\\admin\\Logistics.js",["126","127","128","129","130"],"import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport \"./logistics.css\";\r\nimport CourseList from \"../other/CoursesList\";\r\nimport {\r\n  auth,\r\n  firestore as db,\r\n  storage,\r\n  functions,\r\n} from \"../utils/firebase/firebaseConfig\";\r\nimport { useHistory, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport UserProfile from \"../components/userProfile.js/UserProfile\";\r\n\r\nexport default function Admin() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const History = useHistory();\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((docs) => {\r\n        docs.forEach((doc) => {\r\n          setUsers((users) => [...users, doc.data().collegeRollNo]);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    dispatch({\r\n      action: \"REMOVE_USER\",\r\n    });\r\n\r\n    History.push(\"/\");\r\n  };\r\n\r\n  return user === \"admin\" ? (\r\n    <div className=\"logistics\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar\">\r\n          <Link to=\"/\">\r\n            <div className=\"logo_box\">\r\n              <img\r\n                src=\"https://firebasestorage.googleapis.com/v0/b/ifair-portal.appspot.com/o/assets%2Fpcell_logo.png?alt=media&token=0fab47f3-c265-4b11-a5a5-162437e594c2\"\r\n                alt=\"Placement Cell Logo\"\r\n              />\r\n              <p>\r\n                The Placement Cell <br />\r\n                <span>Sri Venkateswara College</span>\r\n              </p>\r\n            </div>\r\n          </Link>\r\n          <div className=\"button_box\">\r\n            <button className=\"logout_button\" onClick={logOut}>\r\n              Log out\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <h2>Entries found: {users.length}</h2>\r\n        <div className=\"download_csv\">\r\n          <Link to=\"/downloadData\">\r\n            <h4>Download here.</h4>\r\n          </Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          {users.length === 0\r\n            ? \"Loading all entries from the database. Please wait.\"\r\n            : users.map((user) => {\r\n                return <UserProfile rollno={user} />;\r\n              })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n","F:\\pcell-ifair-portal-original\\client\\src\\downloadData\\downloadData.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\Grid.js",["131","132","133","134"],"import React, { useEffect } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport {\r\n  auth,\r\n  firestore as db,\r\n  storage,\r\n} from \"../utils/firebase/firebaseConfig\";\r\nimport \"./grid.css\";\r\nimport companiesList from \"../other/hereyougo2\";\r\nimport Box from \"./box\";\r\nimport CartList from \"./Cartlist\";\r\n\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\n\r\nexport default function Grid() {\r\n  const History = useHistory();\r\n  const [{ user, approved, companyLimit }, dispatch] = useStateValue();\r\n  const logOut = async () => {\r\n    await auth.signOut().then(() => {\r\n      dispatch({\r\n        action: \"REMOVE_USER\",\r\n      });\r\n      History.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return approved ? (\r\n    <div className=\"company_grid\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar\">\r\n          <Link to=\"/\">\r\n            <div className=\"logo_box\">\r\n              <img src=\"./pcell_logo.png\" alt=\"\" />\r\n\r\n              <p>\r\n                The Placement Cell <br />\r\n                <span>Sri Venkateswara College</span>\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n          <div className=\"button_box\">\r\n            <button className=\"logout_button\" onClick={logOut}>\r\n              Log out\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <h3 style={{ margin: \"5px 0 0\" }}>\r\n          You can apply in upto {companyLimit} companies.\r\n        </h3>\r\n        <p style={{ margin: \"5px 0\" }}>\r\n          You can select upto 2 profiles in companies which offer more than two\r\n          profiles.\r\n        </p>\r\n        <CartList />\r\n        <div className=\"company_container\">\r\n          <h2>Corporates</h2>\r\n          {companiesList[0].Corporates.map((company) => (\r\n            <Box\r\n              name={company.companyName}\r\n              logo={company.companyLogo}\r\n              id={company.companyId}\r\n              profile={company.profilesOffered}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"company_container\">\r\n          <h2>Startups</h2>\r\n          {companiesList[0].Startups.map((company) => (\r\n            <Box\r\n              name={company.companyName}\r\n              logo={company.companyLogo}\r\n              id={company.companyId}\r\n              profile={company.profilesOffered}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"company_container\">\r\n          <h2>NGOs</h2>\r\n          {companiesList[0].NGOs.map((company) => (\r\n            <Box\r\n              name={company.companyName}\r\n              logo={company.companyLogo}\r\n              id={company.companyId}\r\n              profile={company.profilesOffered}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Redirect to=\"/profile\" />\r\n  );\r\n}\r\n","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\box.js",["135","136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport \"./companyBox.css\";\r\n\r\nexport default function Box({ logo, name, id, profile }) {\r\n  const [{ user, cart }, dispatch] = useStateValue();\r\n  const [profiles, setProfiles] = useState({ profile1: null, profile2: null });\r\n\r\n  const addToCart = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (profiles.profile1 === null) {\r\n      alert(\"Please select at least one profile.\");\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        newItem: { name: name, id: id, profiles: profiles },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setProfiles({ ...profiles, [e.target.name]: e.target.value });\r\n    console.log(profiles);\r\n  };\r\n\r\n  return (\r\n    <div className=\"company_box\">\r\n      <img src={logo} alt=\"\" />\r\n      <h4>{name}</h4>\r\n      <div className=\"button_row\">\r\n        <button onClick={addToCart} className=\"add_button\">\r\n          <AddCircleIcon />\r\n        </button>\r\n        <Link to={\"/company/\" + id.toString()}>\r\n          <button className=\"view_button\">Read more</button>\r\n        </Link>\r\n      </div>\r\n      <small>Select Profile(s)</small>\r\n      <select onChange={handleChange} name=\"profile1\">\r\n        <option value={null}>Select a profile</option>\r\n        {profile.map((profile) => (\r\n          <option value={profile}>{profile}</option>\r\n        ))}\r\n      </select>\r\n      {profile.length > 1 ? (\r\n        <select onChange={handleChange} name=\"profile2\">\r\n          <option value=\"Select a profile\">Select a profile</option>\r\n          {profile.map((profile) => (\r\n            <option value={profile}>{profile}</option>\r\n          ))}\r\n        </select>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\Cartlist.js",[],"F:\\pcell-ifair-portal-original\\client\\src\\company-grid\\CompanyPage.js",["138"],"import React, { useEffect, useState } from \"react\";\r\nimport companiesList from \"../other/hereyougo2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"../utils/StateProvider\";\r\nimport { auth } from \"../utils/firebase/firebaseConfig\";\r\nimport \"./companypage.css\";\r\n\r\nfunction CompanyPage({ match }) {\r\n  const companies = companiesList[0];\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const [thisCompany, setThisCompany] = useState();\r\n\r\n  const logOut = async () => {\r\n    await auth.signOut().then(() => {\r\n      dispatch({\r\n        action: \"REMOVE_USER\",\r\n      });\r\n      History.push(\"/\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const id = parseInt(match.params.id);\r\n    let company;\r\n    if (id >= 1 && id <= 10) {\r\n      company = companies[\"Corporates\"].find(\r\n        (company) => company.companyId === id\r\n      );\r\n    } else if (id >= 11 && id <= 22) {\r\n      company = companies[\"Startups\"].find(\r\n        (company) => company.companyId === id\r\n      );\r\n    } else {\r\n      company = companies[\"NGOs\"].find((company) => company.companyId === id);\r\n    }\r\n    setThisCompany(company);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"navbar\">\r\n          <Link to=\"/\">\r\n            <div className=\"logo_box\">\r\n              <img src=\"./pcell_logo.png\" alt=\"\" />\r\n\r\n              <p>\r\n                The Placement Cell <br />\r\n                <span>Sri Venkateswara College</span>\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n          {user ? (\r\n            <div className=\"button_box\">\r\n              <button className=\"logout_button\" onClick={logOut}>\r\n                Log out\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"company_info\">\r\n          {user ? (\r\n            <Link to=\"/company/select\">\r\n              <button>Go to Company Selection</button>\r\n            </Link>\r\n          ) : null}\r\n          <br />\r\n          <img src={thisCompany?.companyLogo} alt=\"\" />\r\n          <h1>{thisCompany?.companyName}</h1>\r\n          <strong>\r\n            Stall Coordinator:{\" \"}\r\n            {thisCompany?.stallCoordinator\r\n              ? `${thisCompany.stallCoordinator} (${thisCompany.coordinatorPhone})`\r\n              : null}\r\n          </strong>\r\n          <p>\r\n            <strong>About the company</strong>\r\n            <br />\r\n            {thisCompany?.aboutCompany}\r\n          </p>\r\n          <strong>Profiles Offered</strong>\r\n          <ul>\r\n            {thisCompany?.profilesOffered.map((profile) => (\r\n              <li>{profile}</li>\r\n            ))}\r\n          </ul>\r\n          <strong>Job Description</strong>\r\n          {thisCompany?.JD ? (\r\n            <div>\r\n              {Object.keys(thisCompany.JD).map((profile) => (\r\n                <ul>\r\n                  <strong>{profile}</strong>\r\n                  {thisCompany.JD[profile].map((task) => (\r\n                    <li>{task}</li>\r\n                  ))}\r\n                </ul>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n          <strong>Additional Information</strong>\r\n          {thisCompany?.perks ? (\r\n            <ul>\r\n              {thisCompany.perks.map((perk) => (\r\n                <li>{perk}</li>\r\n              ))}\r\n            </ul>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyPage;\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":24},{"ruleId":"143","severity":1,"message":"147","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":30,"column":17,"nodeType":"150","messageId":"151","endLine":32,"endColumn":12},{"ruleId":"148","severity":1,"message":"149","line":33,"column":18,"nodeType":"150","messageId":"151","endLine":36,"endColumn":12},{"ruleId":"143","severity":1,"message":"152","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":33,"column":12,"nodeType":"145","messageId":"146","endLine":33,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":34,"column":13,"nodeType":"150","endLine":63,"endColumn":4},{"ruleId":"148","severity":1,"message":"156","line":52,"column":21,"nodeType":"150","messageId":"151","endLine":54,"endColumn":16},{"ruleId":"148","severity":1,"message":"156","line":55,"column":22,"nodeType":"150","messageId":"151","endLine":58,"endColumn":16},{"ruleId":"154","severity":1,"message":"157","line":63,"column":6,"nodeType":"158","endLine":63,"endColumn":8,"suggestions":"159"},{"ruleId":"143","severity":1,"message":"153","line":19,"column":12,"nodeType":"145","messageId":"146","endLine":19,"endColumn":16},{"ruleId":"143","severity":1,"message":"152","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":12,"column":12,"nodeType":"145","messageId":"146","endLine":12,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":46,"column":13,"nodeType":"150","endLine":85,"endColumn":4},{"ruleId":"148","severity":1,"message":"156","line":63,"column":19,"nodeType":"150","messageId":"151","endLine":65,"endColumn":14},{"ruleId":"148","severity":1,"message":"156","line":66,"column":20,"nodeType":"150","messageId":"151","endLine":68,"endColumn":14},{"ruleId":"154","severity":1,"message":"160","line":85,"column":6,"nodeType":"158","endLine":85,"endColumn":8,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"162","line":93,"column":6,"nodeType":"158","endLine":93,"endColumn":16,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"155","line":95,"column":13,"nodeType":"150","endLine":121,"endColumn":4},{"ruleId":"148","severity":1,"message":"156","line":112,"column":19,"nodeType":"150","messageId":"151","endLine":114,"endColumn":14},{"ruleId":"148","severity":1,"message":"156","line":115,"column":20,"nodeType":"150","messageId":"151","endLine":117,"endColumn":14},{"ruleId":"154","severity":1,"message":"160","line":121,"column":6,"nodeType":"158","endLine":121,"endColumn":18,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"165","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":6,"column":3,"nodeType":"145","messageId":"146","endLine":6,"endColumn":7},{"ruleId":"143","severity":1,"message":"166","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":10},{"ruleId":"143","severity":1,"message":"167","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":12},{"ruleId":"154","severity":1,"message":"155","line":20,"column":13,"nodeType":"150","endLine":29,"endColumn":4},{"ruleId":"143","severity":1,"message":"152","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"168","line":5,"column":16,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"143","severity":1,"message":"166","line":6,"column":3,"nodeType":"145","messageId":"146","endLine":6,"endColumn":10},{"ruleId":"143","severity":1,"message":"153","line":17,"column":12,"nodeType":"145","messageId":"146","endLine":17,"endColumn":16},{"ruleId":"143","severity":1,"message":"152","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":8,"column":12,"nodeType":"145","messageId":"146","endLine":8,"endColumn":16},{"ruleId":"143","severity":1,"message":"169","line":8,"column":18,"nodeType":"145","messageId":"146","endLine":8,"endColumn":22},{"ruleId":"154","severity":1,"message":"170","line":38,"column":6,"nodeType":"158","endLine":38,"endColumn":8,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'RegistrationForm' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'thisUser', 'thisUser'.","ArrowFunctionExpression","unsafeRefs","'useEffect' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Function declared in a loop contains unsafe references to variable(s) 'properties', 'properties'.","React Hook useEffect has missing dependencies: 'thisUser' and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setThisUser(t => ...)' if you only need 'thisUser' in the 'setThisUser' call.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'rollno' and 'thisUser'. Either include them or remove the dependency array. You can also do a functional update 'setThisUser(t => ...)' if you only need 'thisUser' in the 'setThisUser' call.",["175"],"React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array. You can also do a functional update 'setStatus(s => ...)' if you only need 'status' in the 'setStatus' call.",["176"],["177"],"'CourseList' is defined but never used.","'storage' is defined but never used.","'functions' is defined but never used.","'db' is defined but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'companies' and 'match.params.id'. Either include them or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [thisUser, user]",{"range":"189","text":"190"},"Update the dependencies array to be: [rollno, thisUser]",{"range":"191","text":"192"},"Update the dependencies array to be: [status, thisUser]",{"range":"193","text":"194"},"Update the dependencies array to be: [buttonText, rollno, thisUser]",{"range":"195","text":"196"},"Update the dependencies array to be: [companies, match.params.id]",{"range":"197","text":"198"},[1740,1742],"[thisUser, user]",[2354,2356],"[rollno, thisUser]",[2523,2533],"[status, thisUser]",[3330,3342],"[buttonText, rollno, thisUser]",[1142,1144],"[companies, match.params.id]"]